# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.012.
use strict;
use warnings;

use 5.018;

use ExtUtils::MakeMaker;

# perl Makefile.PL (from git repo) copies 'cplay' -> 'bin/cplay'

if ( -e 'cplay' ) {
    for my $file ("bin/cplay") {
        print STDERR "Generating $file from cplay\n";
        open my $in,  "<cplay" or die $!;
        open my $out, ">$file" or die $!;
        while (<$in>) {
            s|^#!/usr/bin/env perl|#!perl|;    # so MakeMaker can fix it
            print $out $_;
        }
    }
}

my %WriteMakefileArgs = (
    "ABSTRACT"           => "CPAN client using pause-play indexes",
    "AUTHOR"             => "- Nicolas R.",
    "CONFIGURE_REQUIRES" => { "ExtUtils::MakeMaker" => 0 },
    "DISTNAME"           => "App-cplay",
    "EXE_FILES"          => ["bin/cplay"],
    "LICENSE"            => "perl",
    "MIN_PERL_VERSION"   => "5.018",
    "NAME"               => "App::cplay",
    "PREREQ_PM"          => {},
    "TEST_REQUIRES"      => {
        "File::Slurper"             => 0,
        "Test2::Bundle::Extended"   => 0,
        "Test2::Harness"            => "1.000015",
        "Test2::Plugin::NoWarnings" => 0,
        "Test2::Tools::Explain"     => 0,
        "Test::MockModule"          => 0,
        "Test::More"                => 0
    },
    "VERSION" => "0.0001",
    "test"    => { "TESTS" => "t/*.t t/integration/*.t" }
);

my %FallbackPrereqs = (
    "File::Slurper"             => 0,
    "Test2::Bundle::Extended"   => 0,
    "Test2::Harness"            => "1.000015",
    "Test2::Plugin::NoWarnings" => 0,
    "Test2::Tools::Explain"     => 0,
    "Test::MockModule"          => 0,
    "Test::More"                => 0
);

unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
    delete $WriteMakefileArgs{TEST_REQUIRES};
    delete $WriteMakefileArgs{BUILD_REQUIRES};
    $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);
